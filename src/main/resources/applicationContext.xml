<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
        xmlns="http://www.springframework.org/schema/mvc"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:task="http://www.springframework.org/schema/task"
        xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd

        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">
    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven/>

    <context:property-placeholder location="classpath:init.properties" local-override="false"
                                  system-properties-mode="ENVIRONMENT"/>

    <!--加载数据源-->

    <!--================================================================== -->
    <!--开启权限注解支持 -->
    <!--================================================================== -->


    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射，解决@ResponseBody乱码问题 -->
    <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <beans:property name="supportedMediaTypes">
                        <beans:list>
                            <beans:value>text/html;charset=UTF-8</beans:value>
                            <beans:value>text/plain;charset=UTF-8</beans:value>
                            <beans:value>application/json;charset=UTF-8</beans:value>
                        </beans:list>
                    </beans:property>
                </beans:bean>
            </beans:list>
        </beans:property>
    </beans:bean>


    <interceptors>
        <beans:bean class="com.qyt.management.platform.interceptor.PassportInterceptor"/>
        <beans:bean class="com.qyt.management.platform.interceptor.ParameterHandlerInterceptor"/>
        <beans:bean class="com.qyt.management.platform.interceptor.LoggerInterceptorAdapter"/>
    </interceptors>


    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>
    
    <!-- 启动后执行，用于加载字典 -->
    <beans:bean id="ucContextInitLoader" class="com.qyt.management.platform.init.UcContextInitLoader"/>

	<beans:bean id="resourceVersion" class="com.qyt.management.platform.ResourceVersion" init-method="init"/>
	
    <!-- Scans within the base package of the application for @Components to configure as beans -->
    <!-- @Controller, @Service, @Configuration, etc. -->
    <context:component-scan base-package="com"/>

    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <beans:property name="maxUploadSize" value="104857600"/>
        <beans:property name="resolveLazily" value="true"/>
    </beans:bean>


    <!-- The servletContext is required by the ServerContextResource  -->
    <beans:bean id="servletContext" class="org.springframework.web.context.support.ServletContextFactoryBean"/>


    <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <beans:property name="host" value="${mail.host}"></beans:property>
        <beans:property name="username" value="${mail.username}"></beans:property>
        <beans:property name="password" value="${mail.password}"></beans:property>
        <beans:property name="port" value="${mail.port}"></beans:property>
        <beans:property name="javaMailProperties">
            <beans:props>
                <beans:prop key="mail.smtp.auth">${mail.smtp.auth}</beans:prop>
                <beans:prop key="mail.smtp.timeout">${mail.smtp.timeout}</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>

    <beans:bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">
        <beans:property name="from">
            <beans:value><![CDATA[${mail.Aliases}<${mail.default.from}>]]></beans:value>
        </beans:property>
    </beans:bean>

    <beans:bean id="velocityEngine"
                class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <beans:property name="velocityProperties">
            <beans:props>
                <beans:prop key="resourceLoaderPath">/vm/</beans:prop>
                <beans:prop key="resource.loader">class</beans:prop>
                <beans:prop key="class.resource.loader.class">
                    org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
                </beans:prop>
                <beans:prop key="velocimacro.library"></beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>


    <beans:bean id="propertyConfigurer"
                class="com.qyt.management.platform.init.LogPropertiesHolder">
        <beans:property name="ignoreResourceNotFound" value="true"/>
        <beans:property name="locations">
            <beans:list>
                <beans:value>classpath:uc_log.properties</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>
    
    <!-- qyt -->
    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <beans:property name="url" value="${DB_QYT_URL}"/>
        <beans:property name="username" value="${DB_QYT_USER}"/>
        <beans:property name="password" value="${DB_QYT_PASSWD}"/>
        <beans:property name="maxActive" value="255"/>
        <beans:property name="minIdle" value="5"/>
        <beans:property name="maxIdle" value="50"/>
        <beans:property name="maxWait" value="120000"/>
    </beans:bean>

    <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="configLocation" value="classpath:mybatis-configuration.xml"></beans:property>
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="typeAliasesPackage">
            <beans:value>
                com.qyt.management.storage.*.domain,
                com.qyt.management.sys.dicts.domain,
                com.qyt.management.sys.logs.domain,
                com.qyt.management.uc.auth.domain,
                com.qyt.management.uc.user.domain,
                com.qyt.management.mall.item.domain,
                com.qyt.management.parameters.domain
            </beans:value>
        </beans:property>
    </beans:bean>

    <!--事务管理-->
    <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <beans:property name="dataSource" ref="dataSource"></beans:property>
    </beans:bean>

    <tx:advice id="ucAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="select*" propagation="SUPPORTS" rollback-for="java.lang.Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

    <aop:config proxy-target-class="true">
        <aop:pointcut id="fooServiceMethods"
                      expression="execution(public * org..service.*.*(..)) or execution(public * com..service.*.*(..))"/>
        <aop:advisor advice-ref="ucAdvice" pointcut-ref="fooServiceMethods"/>
    </aop:config>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <beans:property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <beans:property name="basePackage">
            <beans:value>
                com.qyt.management.storage.*.dao,
                com.qyt.management.sys.dicts.dao,
                com.qyt.management.sys.logs.dao,
                com.qyt.management.uc.auth.dao,
                com.qyt.management.uc.user.dao,
                com.qyt.management.parameters.dao
            </beans:value>
        </beans:property>
    </beans:bean>
    <!-- qyt -->

</beans:beans>