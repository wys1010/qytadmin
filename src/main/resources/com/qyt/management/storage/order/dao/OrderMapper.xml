<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qyt.management.storage.order.dao.OrderMapper">
    <resultMap id="BaseResultMap" type="com.qyt.management.storage.order.domain.Order">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="order_no" property="orderNo" jdbcType="VARCHAR"/>
        <result column="stock_id" property="stockId" jdbcType="INTEGER"/>
        <result column="product_name" property="productName" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="created_by" property="createdBy" jdbcType="INTEGER"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
        <result column="updated_by" property="updatedBy" jdbcType="INTEGER"/>
        <result column="num" property="num" jdbcType="INTEGER"/>
        <result column="warehouse_id" property="warehouseId" jdbcType="INTEGER"/>
        <result column="product_id" property="productId" jdbcType="INTEGER"/>
        <result column="actual_deliver_num" property="actualDeliverNum" jdbcType="INTEGER"/>
        <result column="deliver_remark" property="deliverRemark" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
		id, order_no, stock_id, product_name, status, remark, created_at,
		created_by, updated_at, updated_by,num,warehouse_id,product_id,actual_deliver_num,deliver_remark
	</sql>
    <select id="selectEntityById" resultMap="BaseResultMap"
            parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from orders
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteEntity" parameterType="java.lang.Integer">
		delete from orders
		where id = #{id,jdbcType=INTEGER}
	</delete>
    <insert id="insertEntity" parameterType="com.qyt.management.storage.order.domain.Order">
        insert into orders
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="stockId != null">
                stock_id,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="updatedBy != null">
                updated_by,
            </if>
            <if test="num != null and num gt 0">
                num,
            </if>
            <if test="warehouseId != null and warehouseId gt 0">
                warehouse_id,
            </if>
            <if test="productId != null and productId gt 0">
                product_id,
            </if>
            <if test="actualDeliverNum != null and actualDeliverNum gt 0">
                actual_deliver_num,
            </if>
            <if test="deliverRemark != null">
                deliver_remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="stockId != null">
                #{stockId,jdbcType=INTEGER},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=INTEGER},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                #{updatedBy,jdbcType=INTEGER},
            </if>
            <if test="num != null and num gt 0">
                #{num,jdbcType=INTEGER},
            </if>
            <if test="warehouseId != null and warehouseId gt 0">
                #{warehouseId,jdbcType=INTEGER},
            </if>
            <if test="productId != null and productId gt 0">
                #{productId,jdbcType=INTEGER},
            </if>
            <if test="actualDeliverNum != null and actualDeliverNum gt 0">
                #{actualDeliverNum,jdbcType=INTEGER},
            </if>
            <if test="deliverRemark != null">
                #{deliverRemark,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateEntity" parameterType="com.qyt.management.storage.order.domain.Order">
        update orders
        <set>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="stockId != null">
                stock_id = #{stockId,jdbcType=INTEGER},
            </if>
            <if test="productName != null">
                product_name = #{productName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                updated_by = #{updatedBy,jdbcType=INTEGER},
            </if>
            <if test="num != null and num gt 0">
                num = #{num,jdbcType=INTEGER},
            </if>
            <if test="warehouseId != null and warehouseId gt 0">
                warehouse_id = #{warehouseId,jdbcType=INTEGER},
            </if>
            <if test="productId != null and productId gt 0">
                product_id = #{productId,jdbcType=INTEGER},
            </if>
            <if test="actualDeliverNum != null and actualDeliverNum gt 0">
                actual_deliver_num = #{actualDeliverNum,jdbcType=INTEGER},
            </if>
            <if test="deliverRemark != null">
                deliver_remark = #{deliverRemark,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectEntities" resultType="com.qyt.management.storage.order.domain.Order" parameterType="map">
        SELECT a.*,s.name created_by_name,w.name warehouse_name FROM orders a JOIN staffs s on a.created_by = s.id
        LEFT JOIN warehouses w on a.warehouse_id=w.id
        <include refid="sp_where"></include>
        order by
        <if test="field !=null and field !=''">
            ${sortInfo} ,
        </if>
        a.updated_at desc
        limit #{start} , #{limit}
    </select>

    <select id="selectEntitiesCount" resultType="int" parameterType="map">
        SELECT
        count(*)
        FROM
        orders a
        <include refid="sp_where"></include>
    </select>

    <sql id="sp_where">
      <where>
          <if test="condition!=null and condition.productName !=  null">
              AND a.product_name  like concat('%' , #{condition.productName} , '%')
          </if>
          <if test="condition!=null and condition.orderNo !=  null">
              AND a.order_no  like concat('%' , #{condition.orderNo} , '%')
          </if>

          <if test="condition!=null and condition.status !=  null and condition.status != 0">
              AND a.status = #{condition.status}
          </if>

          <if test="condition!=null and condition.createdAtBeginDate !=  null ">
              AND a.created_at >= #{condition.createdAtBeginDate}
          </if>
          <if test="condition!=null and condition.createdAtEndDate !=  null ">
              AND a.created_at &lt;= #{condition.createdAtEndDate}
          </if>
          <if test="condition!=null and condition.createdBy !=  null ">
              AND a.created_by = #{condition.createdBy}
          </if>
      </where>
    </sql>
</mapper>